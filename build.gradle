/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'bijit' at '11/7/14 2:57 PM' with Gradle 2.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'


sourceCompatibility = '1.7'
targetCompatibility = '1.7'
version = '1.0'
mainClassName = 'net.freelogue.recommender.Main'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    //compile 'org.slf4j:slf4j-api:1.7.5'
    //compile 'com.googlecode.json-simple:json-simple:1.1'
    compile 'org.json:json:20090211'
    compile 'postgresql:postgresql:9.1-901.jdbc4'
    compile 'org.apache.mahout:mahout-core:0.9'
    compile 'org.slf4j:slf4j-simple:1.7.7'
        
    // Declare the dependency for your favorite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.11'
}

jar {
	from configurations.compile.collect {it.isDirectory() ? it : zipTree(it) }
    manifest {
        attributes 'Implementation-Title': 'Recommender Project',
                   'Implementation-Version': version,
				   'Main-Class': mainClassName
    }
}

run {
    //systemProperty 'projectwithgradle.name', 'Project with Gradle'
}

// custom task
task runJar(group: 'Run App', description: 'Build and Runs Jar file from Jarpath', type: Exec, dependsOn: jar){
	executable 'java'
	args '-jar' , "$jar.archivePath"
	
}

// publish the code
/*
uploadArchives {
    repositories {
       flatDir {
	   // local dir 
           dirs 'repos'
	   // git hub 
       }
    }
}
*/

//Eclipse Set up
// Make this project as a Gradle project
eclipse.project {
  	natures 'org.springsource.ide.eclipse.gradle.core.nature'
}



